/*!*************************************************************************
 * Copyright 2021 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it.
 **************************************************************************/
!(function (e) {
  'function' == typeof define && define.amd ? define(e) : e();
})(function () {
  'use strict';
  /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */ function __awaiter(
    e,
    t,
    r,
    n,
  ) {
    return new (r || (r = Promise))(function (o, i) {
      function c(e) {
        try {
          s(n.next(e));
        } catch (e) {
          i(e);
        }
      }
      function a(e) {
        try {
          s(n.throw(e));
        } catch (e) {
          i(e);
        }
      }
      function s(e) {
        var t;
        e.done
          ? o(e.value)
          : ((t = e.value),
            t instanceof r
              ? t
              : new r(function (e) {
                  e(t);
                })).then(c, a);
      }
      s((n = n.apply(e, t || [])).next());
    });
  }
  var commonjsGlobal =
    'undefined' != typeof globalThis
      ? globalThis
      : 'undefined' != typeof window
      ? window
      : 'undefined' != typeof global
      ? global
      : 'undefined' != typeof self
      ? self
      : {};
  function createCommonjsModule(e) {
    var t = { exports: {} };
    return e(t, t.exports), t.exports;
    /**
     * workerpool.js
     * https://github.com/josdejong/workerpool
     *
     * Offload tasks to a pool of workers on node.js and in the browser.
     *
     * @version 6.2.0
     * @date    2022-01-15
     *
     * @license
     * Copyright (C) 2014-2022 Jos de Jong <wjosdejong@gmail.com>
     *
     * Licensed under the Apache License, Version 2.0 (the "License"); you may not
     * use this file except in compliance with the License. You may obtain a copy
     * of the License at
     *
     * http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
     * License for the specific language governing permissions and limitations under
     * the License.
     */
  }
  var workerpool = createCommonjsModule(function (module, exports) {
    var factory;
    'undefined' != typeof self && self,
      (factory = function () {
        return (function () {
          var __webpack_modules__ = {
              345: function (e, t, r) {
                var n = r(219),
                  o = r(751),
                  i = r(828),
                  c = new (r(833))();
                function a(e, t) {
                  'string' == typeof e
                    ? (this.script = e || null)
                    : ((this.script = null), (t = e)),
                    (this.workers = []),
                    (this.tasks = []),
                    (t = t || {}),
                    (this.forkArgs = Object.freeze(t.forkArgs || [])),
                    (this.forkOpts = Object.freeze(t.forkOpts || {})),
                    (this.debugPortStart = t.debugPortStart || 43210),
                    (this.nodeWorker = t.nodeWorker),
                    (this.workerType = t.workerType || t.nodeWorker || 'auto'),
                    (this.maxQueueSize = t.maxQueueSize || 1 / 0),
                    (this.onCreateWorker =
                      t.onCreateWorker ||
                      function () {
                        return null;
                      }),
                    (this.onTerminateWorker =
                      t.onTerminateWorker ||
                      function () {
                        return null;
                      }),
                    t && 'maxWorkers' in t
                      ? ((function (e) {
                          if (!s(e) || !u(e) || e < 1)
                            throw new TypeError(
                              'Option maxWorkers must be an integer number >= 1',
                            );
                        })(t.maxWorkers),
                        (this.maxWorkers = t.maxWorkers))
                      : (this.maxWorkers = Math.max((i.cpus || 4) - 1, 1)),
                    t &&
                      'minWorkers' in t &&
                      ('max' === t.minWorkers
                        ? (this.minWorkers = this.maxWorkers)
                        : ((function (e) {
                            if (!s(e) || !u(e) || e < 0)
                              throw new TypeError(
                                'Option minWorkers must be an integer number >= 0',
                              );
                          })(t.minWorkers),
                          (this.minWorkers = t.minWorkers),
                          (this.maxWorkers = Math.max(
                            this.minWorkers,
                            this.maxWorkers,
                          ))),
                      this._ensureMinWorkers()),
                    (this._boundNext = this._next.bind(this)),
                    'thread' === this.workerType && o.ensureWorkerThreads();
                }
                function s(e) {
                  return 'number' == typeof e;
                }
                function u(e) {
                  return Math.round(e) == e;
                }
                (a.prototype.exec = function (e, t, r) {
                  if (t && !Array.isArray(t))
                    throw new TypeError('Array expected as argument "params"');
                  if ('string' == typeof e) {
                    var o = n.defer();
                    if (this.tasks.length >= this.maxQueueSize)
                      throw new Error(
                        'Max queue size of ' + this.maxQueueSize + ' reached',
                      );
                    var i = this.tasks,
                      c = {
                        method: e,
                        params: t,
                        resolver: o,
                        timeout: null,
                        options: r,
                      };
                    i.push(c);
                    var a = o.promise.timeout;
                    return (
                      (o.promise.timeout = function (e) {
                        return -1 !== i.indexOf(c)
                          ? ((c.timeout = e), o.promise)
                          : a.call(o.promise, e);
                      }),
                      this._next(),
                      o.promise
                    );
                  }
                  if ('function' == typeof e)
                    return this.exec('run', [String(e), t]);
                  throw new TypeError(
                    'Function or string expected as argument "method"',
                  );
                }),
                  (a.prototype.proxy = function () {
                    if (arguments.length > 0)
                      throw new Error('No arguments expected');
                    var e = this;
                    return this.exec('methods').then(function (t) {
                      var r = {};
                      return (
                        t.forEach(function (t) {
                          r[t] = function () {
                            return e.exec(
                              t,
                              Array.prototype.slice.call(arguments),
                            );
                          };
                        }),
                        r
                      );
                    });
                  }),
                  (a.prototype._next = function () {
                    if (this.tasks.length > 0) {
                      var e = this._getWorker();
                      if (e) {
                        var t = this,
                          r = this.tasks.shift();
                        if (r.resolver.promise.pending) {
                          var n = e
                            .exec(r.method, r.params, r.resolver, r.options)
                            .then(t._boundNext)
                            .catch(function () {
                              if (e.terminated) return t._removeWorker(e);
                            })
                            .then(function () {
                              t._next();
                            });
                          'number' == typeof r.timeout && n.timeout(r.timeout);
                        } else t._next();
                      }
                    }
                  }),
                  (a.prototype._getWorker = function () {
                    for (var e = this.workers, t = 0; t < e.length; t++) {
                      var r = e[t];
                      if (!1 === r.busy()) return r;
                    }
                    return e.length < this.maxWorkers
                      ? ((r = this._createWorkerHandler()), e.push(r), r)
                      : null;
                  }),
                  (a.prototype._removeWorker = function (e) {
                    var t = this;
                    return (
                      c.releasePort(e.debugPort),
                      this._removeWorkerFromList(e),
                      this._ensureMinWorkers(),
                      new n(function (r, n) {
                        e.terminate(!1, function (o) {
                          t.onTerminateWorker({
                            forkArgs: e.forkArgs,
                            forkOpts: e.forkOpts,
                            script: e.script,
                          }),
                            o ? n(o) : r(e);
                        });
                      })
                    );
                  }),
                  (a.prototype._removeWorkerFromList = function (e) {
                    var t = this.workers.indexOf(e);
                    -1 !== t && this.workers.splice(t, 1);
                  }),
                  (a.prototype.terminate = function (e, t) {
                    var r = this;
                    this.tasks.forEach(function (e) {
                      e.resolver.reject(new Error('Pool terminated'));
                    }),
                      (this.tasks.length = 0);
                    var o = function (e) {
                        this._removeWorkerFromList(e);
                      }.bind(this),
                      i = [];
                    return (
                      this.workers.slice().forEach(function (n) {
                        var c = n
                          .terminateAndNotify(e, t)
                          .then(o)
                          .always(function () {
                            r.onTerminateWorker({
                              forkArgs: n.forkArgs,
                              forkOpts: n.forkOpts,
                              script: n.script,
                            });
                          });
                        i.push(c);
                      }),
                      n.all(i)
                    );
                  }),
                  (a.prototype.stats = function () {
                    var e = this.workers.length,
                      t = this.workers.filter(function (e) {
                        return e.busy();
                      }).length;
                    return {
                      totalWorkers: e,
                      busyWorkers: t,
                      idleWorkers: e - t,
                      pendingTasks: this.tasks.length,
                      activeTasks: t,
                    };
                  }),
                  (a.prototype._ensureMinWorkers = function () {
                    if (this.minWorkers)
                      for (
                        var e = this.workers.length;
                        e < this.minWorkers;
                        e++
                      )
                        this.workers.push(this._createWorkerHandler());
                  }),
                  (a.prototype._createWorkerHandler = function () {
                    var e =
                      this.onCreateWorker({
                        forkArgs: this.forkArgs,
                        forkOpts: this.forkOpts,
                        script: this.script,
                      }) || {};
                    return new o(e.script || this.script, {
                      forkArgs: e.forkArgs || this.forkArgs,
                      forkOpts: e.forkOpts || this.forkOpts,
                      debugPort: c.nextAvailableStartingAt(this.debugPortStart),
                      workerType: this.workerType,
                    });
                  }),
                  (e.exports = a);
              },
              219: function (e) {
                function t(e, i) {
                  var c = this;
                  if (!(this instanceof t))
                    throw new SyntaxError(
                      'Constructor must be called with the new operator',
                    );
                  if ('function' != typeof e)
                    throw new SyntaxError(
                      'Function parameter handler(resolve, reject) missing',
                    );
                  var a = [],
                    s = [];
                  (this.resolved = !1),
                    (this.rejected = !1),
                    (this.pending = !0);
                  var u = function (e, t) {
                    a.push(e), s.push(t);
                  };
                  this.then = function (e, n) {
                    return new t(function (t, o) {
                      var i = e ? r(e, t, o) : t,
                        c = n ? r(n, t, o) : o;
                      u(i, c);
                    }, c);
                  };
                  var f = function (e) {
                      return (
                        (c.resolved = !0),
                        (c.rejected = !1),
                        (c.pending = !1),
                        a.forEach(function (t) {
                          t(e);
                        }),
                        (u = function (t, r) {
                          t(e);
                        }),
                        (f = d = function () {}),
                        c
                      );
                    },
                    d = function (e) {
                      return (
                        (c.resolved = !1),
                        (c.rejected = !0),
                        (c.pending = !1),
                        s.forEach(function (t) {
                          t(e);
                        }),
                        (u = function (t, r) {
                          r(e);
                        }),
                        (f = d = function () {}),
                        c
                      );
                    };
                  (this.cancel = function () {
                    return i ? i.cancel() : d(new n()), c;
                  }),
                    (this.timeout = function (e) {
                      if (i) i.timeout(e);
                      else {
                        var t = setTimeout(function () {
                          d(new o('Promise timed out after ' + e + ' ms'));
                        }, e);
                        c.always(function () {
                          clearTimeout(t);
                        });
                      }
                      return c;
                    }),
                    e(
                      function (e) {
                        f(e);
                      },
                      function (e) {
                        d(e);
                      },
                    );
                }
                function r(e, t, r) {
                  return function (n) {
                    try {
                      var o = e(n);
                      o &&
                      'function' == typeof o.then &&
                      'function' == typeof o.catch
                        ? o.then(t, r)
                        : t(o);
                    } catch (e) {
                      r(e);
                    }
                  };
                }
                function n(e) {
                  (this.message = e || 'promise cancelled'),
                    (this.stack = new Error().stack);
                }
                function o(e) {
                  (this.message = e || 'timeout exceeded'),
                    (this.stack = new Error().stack);
                }
                (t.prototype.catch = function (e) {
                  return this.then(null, e);
                }),
                  (t.prototype.always = function (e) {
                    return this.then(e, e);
                  }),
                  (t.all = function (e) {
                    return new t(function (t, r) {
                      var n = e.length,
                        o = [];
                      n
                        ? e.forEach(function (e, i) {
                            e.then(
                              function (e) {
                                (o[i] = e), 0 == --n && t(o);
                              },
                              function (e) {
                                (n = 0), r(e);
                              },
                            );
                          })
                        : t(o);
                    });
                  }),
                  (t.defer = function () {
                    var e = {};
                    return (
                      (e.promise = new t(function (t, r) {
                        (e.resolve = t), (e.reject = r);
                      })),
                      e
                    );
                  }),
                  (n.prototype = new Error()),
                  (n.prototype.constructor = Error),
                  (n.prototype.name = 'CancellationError'),
                  (t.CancellationError = n),
                  (o.prototype = new Error()),
                  (o.prototype.constructor = Error),
                  (o.prototype.name = 'TimeoutError'),
                  (t.TimeoutError = o),
                  (e.exports = t);
              },
              751: function (e, t, r) {
                function n(e, t) {
                  var r =
                    ('undefined' != typeof Symbol && e[Symbol.iterator]) ||
                    e['@@iterator'];
                  if (!r) {
                    if (
                      Array.isArray(e) ||
                      (r = (function (e, t) {
                        if (e) {
                          if ('string' == typeof e) return o(e, t);
                          var r = Object.prototype.toString
                            .call(e)
                            .slice(8, -1);
                          return (
                            'Object' === r &&
                              e.constructor &&
                              (r = e.constructor.name),
                            'Map' === r || 'Set' === r
                              ? Array.from(e)
                              : 'Arguments' === r ||
                                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(
                                  r,
                                )
                              ? o(e, t)
                              : void 0
                          );
                        }
                      })(e)) ||
                      (t && e && 'number' == typeof e.length)
                    ) {
                      r && (e = r);
                      var n = 0,
                        i = function () {};
                      return {
                        s: i,
                        n: function () {
                          return n >= e.length
                            ? { done: !0 }
                            : { done: !1, value: e[n++] };
                        },
                        e: function (e) {
                          throw e;
                        },
                        f: i,
                      };
                    }
                    throw new TypeError(
                      'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
                    );
                  }
                  var c,
                    a = !0,
                    s = !1;
                  return {
                    s: function () {
                      r = r.call(e);
                    },
                    n: function () {
                      var e = r.next();
                      return (a = e.done), e;
                    },
                    e: function (e) {
                      (s = !0), (c = e);
                    },
                    f: function () {
                      try {
                        a || null == r.return || r.return();
                      } finally {
                        if (s) throw c;
                      }
                    },
                  };
                }
                function o(e, t) {
                  (null == t || t > e.length) && (t = e.length);
                  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                  return n;
                }
                function i(e) {
                  return (
                    (i =
                      'function' == typeof Symbol &&
                      'symbol' == typeof Symbol.iterator
                        ? function (e) {
                            return typeof e;
                          }
                        : function (e) {
                            return e &&
                              'function' == typeof Symbol &&
                              e.constructor === Symbol &&
                              e !== Symbol.prototype
                              ? 'symbol'
                              : typeof e;
                          }),
                    i(e)
                  );
                }
                var c = r(219),
                  a = r(828),
                  s = r(397),
                  u = '__workerpool-terminate__';
                function f() {
                  var e = b();
                  if (!e)
                    throw new Error(
                      "WorkerPool: workerType = 'thread' is not supported, Node >= 11.7.0 required",
                    );
                  return e;
                }
                function d() {
                  if (
                    'function' != typeof Worker &&
                    ('object' !==
                      ('undefined' == typeof Worker
                        ? 'undefined'
                        : i(Worker)) ||
                      'function' != typeof Worker.prototype.constructor)
                  )
                    throw new Error('WorkerPool: Web Workers not supported');
                }
                function b() {
                  try {
                    return s('worker_threads');
                  } catch (e) {
                    if (
                      'object' === i(e) &&
                      null !== e &&
                      'MODULE_NOT_FOUND' === e.code
                    )
                      return null;
                    throw e;
                  }
                }
                function _(e, t) {
                  var r = new t(e);
                  return (
                    (r.isBrowserWorker = !0),
                    (r.on = function (e, t) {
                      this.addEventListener(e, function (e) {
                        t(e.data);
                      });
                    }),
                    (r.send = function (e) {
                      this.postMessage(e);
                    }),
                    r
                  );
                }
                function g(e, t) {
                  var r = new t.Worker(e, { stdout: !1, stderr: !1 });
                  return (
                    (r.isWorkerThread = !0),
                    (r.send = function (e) {
                      this.postMessage(e);
                    }),
                    (r.kill = function () {
                      return this.terminate(), !0;
                    }),
                    (r.disconnect = function () {
                      this.terminate();
                    }),
                    r
                  );
                }
                function l(e, t, r) {
                  var n = r.fork(e, t.forkArgs, t.forkOpts);
                  return (n.isChildProcess = !0), n;
                }
                function w(e) {
                  e = e || {};
                  var t = process.execArgv.join(' '),
                    r = -1 !== t.indexOf('--inspect'),
                    n = -1 !== t.indexOf('--debug-brk'),
                    o = [];
                  return (
                    r &&
                      (o.push('--inspect=' + e.debugPort),
                      n && o.push('--debug-brk')),
                    process.execArgv.forEach(function (e) {
                      e.indexOf('--max-old-space-size') > -1 && o.push(e);
                    }),
                    Object.assign({}, e, {
                      forkArgs: e.forkArgs,
                      forkOpts: Object.assign({}, e.forkOpts, {
                        execArgv: (
                          (e.forkOpts && e.forkOpts.execArgv) ||
                          []
                        ).concat(o),
                      }),
                    })
                  );
                }
                function p(e, t) {
                  var o = this,
                    i = t || {};
                  function c(e) {
                    for (var t in ((o.terminated = !0), o.processing))
                      void 0 !== o.processing[t] &&
                        o.processing[t].resolver.reject(e);
                    o.processing = Object.create(null);
                  }
                  (this.script =
                    e ||
                    (function () {
                      if ('browser' === a.platform) {
                        if ('undefined' == typeof Blob)
                          throw new Error('Blob not supported by the browser');
                        if (
                          !window.URL ||
                          'function' != typeof window.URL.createObjectURL
                        )
                          throw new Error(
                            'URL.createObjectURL not supported by the browser',
                          );
                        var e = new Blob([r(670)], { type: 'text/javascript' });
                        return window.URL.createObjectURL(e);
                      }
                      return __dirname + '/worker.js';
                    })()),
                    (this.worker = (function (e, t) {
                      if ('web' === t.workerType) return d(), _(e, Worker);
                      if ('thread' === t.workerType) return g(e, (r = f()));
                      if ('process' !== t.workerType && t.workerType) {
                        if ('browser' === a.platform) return d(), _(e, Worker);
                        var r = b();
                        return r ? g(e, r) : l(e, w(t), s('child_process'));
                      }
                      return l(e, w(t), s('child_process'));
                    })(this.script, i)),
                    (this.debugPort = i.debugPort),
                    (this.forkOpts = i.forkOpts),
                    (this.forkArgs = i.forkArgs),
                    e || (this.worker.ready = !0),
                    (this.requestQueue = []),
                    this.worker.on('message', function (e) {
                      if (!o.terminated)
                        if ('string' == typeof e && 'ready' === e)
                          (o.worker.ready = !0),
                            (function () {
                              var e,
                                t = n(o.requestQueue.splice(0));
                              try {
                                for (t.s(); !(e = t.n()).done; ) {
                                  var r = e.value;
                                  o.worker.send(r);
                                }
                              } catch (e) {
                                t.e(e);
                              } finally {
                                t.f();
                              }
                            })();
                        else {
                          var t = e.id,
                            r = o.processing[t];
                          void 0 !== r &&
                            (e.isEvent
                              ? r.options &&
                                'function' == typeof r.options.on &&
                                r.options.on(e.payload)
                              : (delete o.processing[t],
                                !0 === o.terminating && o.terminate(),
                                e.error
                                  ? r.resolver.reject(
                                      (function (e) {
                                        for (
                                          var t = new Error(''),
                                            r = Object.keys(e),
                                            n = 0;
                                          n < r.length;
                                          n++
                                        )
                                          t[r[n]] = e[r[n]];
                                        return t;
                                      })(e.error),
                                    )
                                  : r.resolver.resolve(e.result)));
                        }
                    });
                  var u = this.worker;
                  this.worker.on('error', c),
                    this.worker.on('exit', function (e, t) {
                      var r = 'Workerpool Worker terminated Unexpectedly\n';
                      (r += '    exitCode: `' + e + '`\n'),
                        (r += '    signalCode: `' + t + '`\n'),
                        (r += '    workerpool.script: `' + o.script + '`\n'),
                        (r += '    spawnArgs: `' + u.spawnargs + '`\n'),
                        (r += '    spawnfile: `' + u.spawnfile + '`\n'),
                        (r += '    stdout: `' + u.stdout + '`\n'),
                        (r += '    stderr: `' + u.stderr + '`\n'),
                        c(new Error(r));
                    }),
                    (this.processing = Object.create(null)),
                    (this.terminating = !1),
                    (this.terminated = !1),
                    (this.terminationHandler = null),
                    (this.lastId = 0);
                }
                (p.prototype.methods = function () {
                  return this.exec('methods');
                }),
                  (p.prototype.exec = function (e, t, r, n) {
                    r || (r = c.defer());
                    var o = ++this.lastId;
                    this.processing[o] = { id: o, resolver: r, options: n };
                    var i = { id: o, method: e, params: t };
                    this.terminated
                      ? r.reject(new Error('Worker is terminated'))
                      : this.worker.ready
                      ? this.worker.send(i)
                      : this.requestQueue.push(i);
                    var a = this;
                    return r.promise.catch(function (e) {
                      if (
                        e instanceof c.CancellationError ||
                        e instanceof c.TimeoutError
                      )
                        return (
                          delete a.processing[o],
                          a.terminateAndNotify(!0).then(
                            function () {
                              throw e;
                            },
                            function (e) {
                              throw e;
                            },
                          )
                        );
                      throw e;
                    });
                  }),
                  (p.prototype.busy = function () {
                    return Object.keys(this.processing).length > 0;
                  }),
                  (p.prototype.terminate = function (e, t) {
                    var r = this;
                    if (e) {
                      for (var n in this.processing)
                        void 0 !== this.processing[n] &&
                          this.processing[n].resolver.reject(
                            new Error('Worker terminated'),
                          );
                      this.processing = Object.create(null);
                    }
                    if (
                      ('function' == typeof t && (this.terminationHandler = t),
                      this.busy())
                    )
                      this.terminating = !0;
                    else {
                      var o = function (e) {
                        if (
                          ((r.terminated = !0),
                          null != r.worker &&
                            r.worker.removeAllListeners &&
                            r.worker.removeAllListeners('message'),
                          (r.worker = null),
                          (r.terminating = !1),
                          r.terminationHandler)
                        )
                          r.terminationHandler(e, r);
                        else if (e) throw e;
                      };
                      if (this.worker) {
                        if ('function' == typeof this.worker.kill) {
                          if (this.worker.killed)
                            return void o(new Error('worker already killed!'));
                          if (this.worker.isChildProcess) {
                            var i = setTimeout(function () {
                              r.worker && r.worker.kill();
                            }, 1e3);
                            this.worker.once('exit', function () {
                              clearTimeout(i),
                                r.worker && (r.worker.killed = !0),
                                o();
                            }),
                              this.worker.ready
                                ? this.worker.send(u)
                                : this.worker.requestQueue.push(u);
                          } else
                            this.worker.kill(), (this.worker.killed = !0), o();
                          return;
                        }
                        if ('function' != typeof this.worker.terminate)
                          throw new Error('Failed to terminate worker');
                        this.worker.terminate(), (this.worker.killed = !0);
                      }
                      o();
                    }
                  }),
                  (p.prototype.terminateAndNotify = function (e, t) {
                    var r = c.defer();
                    return (
                      t && (r.promise.timeout = t),
                      this.terminate(e, function (e, t) {
                        e ? r.reject(e) : r.resolve(t);
                      }),
                      r.promise
                    );
                  }),
                  (e.exports = p),
                  (e.exports._tryRequireWorkerThreads = b),
                  (e.exports._setupProcessWorker = l),
                  (e.exports._setupBrowserWorker = _),
                  (e.exports._setupWorkerThreadWorker = g),
                  (e.exports.ensureWorkerThreads = f);
              },
              833: function (e) {
                function t() {
                  (this.ports = Object.create(null)), (this.length = 0);
                }
                (e.exports = t),
                  (t.prototype.nextAvailableStartingAt = function (e) {
                    for (; !0 === this.ports[e]; ) e++;
                    if (e >= 65535)
                      throw new Error(
                        'WorkerPool debug port limit reached: ' +
                          e +
                          '>= 65535',
                      );
                    return (this.ports[e] = !0), this.length++, e;
                  }),
                  (t.prototype.releasePort = function (e) {
                    delete this.ports[e], this.length--;
                  });
              },
              828: function (e, t, r) {
                var n = r(397),
                  o = function (e) {
                    return (
                      void 0 !== e &&
                      null != e.versions &&
                      null != e.versions.node
                    );
                  };
                (e.exports.isNode = o),
                  (e.exports.platform =
                    'undefined' != typeof process && o(process)
                      ? 'node'
                      : 'browser');
                var i = (function (e) {
                  try {
                    return n(e);
                  } catch (e) {
                    return null;
                  }
                })('worker_threads');
                (e.exports.isMainThread =
                  'node' === e.exports.platform
                    ? (!i || i.isMainThread) && !process.connected
                    : 'undefined' != typeof Window),
                  (e.exports.cpus =
                    'browser' === e.exports.platform
                      ? self.navigator.hardwareConcurrency
                      : n('os').cpus().length);
              },
              670: function (e) {
                e.exports =
                  '!function(){var __webpack_exports__={};!function(){var exports=__webpack_exports__,__webpack_unused_export__;function _typeof(r){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var requireFoolWebpack=eval("typeof require !== \'undefined\' ? require : function (module) { throw new Error(\'Module \\" + module + \\" not found.\') }"),TERMINATE_METHOD_ID="__workerpool-terminate__",worker={exit:function(){}},WorkerThreads,parentPort;if("undefined"!=typeof self&&"function"==typeof postMessage&&"function"==typeof addEventListener)worker.on=function(r,e){addEventListener(r,function(r){e(r.data)})},worker.send=function(r){postMessage(r)};else{if("undefined"==typeof process)throw new Error("Script must be executed as a worker");try{WorkerThreads=requireFoolWebpack("worker_threads")}catch(error){if("object"!==_typeof(error)||null===error||"MODULE_NOT_FOUND"!==error.code)throw error}WorkerThreads&&null!==WorkerThreads.parentPort?(parentPort=WorkerThreads.parentPort,worker.send=parentPort.postMessage.bind(parentPort),worker.on=parentPort.on.bind(parentPort)):(worker.on=process.on.bind(process),worker.send=process.send.bind(process),worker.on("disconnect",function(){process.exit(1)}),worker.exit=process.exit.bind(process))}function convertError(o){return Object.getOwnPropertyNames(o).reduce(function(r,e){return Object.defineProperty(r,e,{value:o[e],enumerable:!0})},{})}function isPromise(r){return r&&"function"==typeof r.then&&"function"==typeof r.catch}worker.methods={},worker.methods.run=function(r,e){r=new Function("return ("+r+").apply(null, arguments);");return r.apply(r,e)},worker.methods.methods=function(){return Object.keys(worker.methods)};var currentRequestId=null;worker.on("message",function(e){if(e===TERMINATE_METHOD_ID)return worker.exit(0);try{var r=worker.methods[e.method];if(!r)throw new Error(\'Unknown method "\'+e.method+\'"\');currentRequestId=e.id;var o=r.apply(r,e.params);isPromise(o)?o.then(function(r){worker.send({id:e.id,result:r,error:null}),currentRequestId=null}).catch(function(r){worker.send({id:e.id,result:null,error:convertError(r)}),currentRequestId=null}):(worker.send({id:e.id,result:o,error:null}),currentRequestId=null)}catch(r){worker.send({id:e.id,result:null,error:convertError(r)})}}),worker.register=function(r){if(r)for(var e in r)r.hasOwnProperty(e)&&(worker.methods[e]=r[e]);worker.send("ready")},worker.emit=function(r){currentRequestId&&worker.send({id:currentRequestId,isEvent:!0,payload:r})},__webpack_unused_export__=worker.register,worker.emit}()}();';
              },
              397: function (module) {
                var requireFoolWebpack = eval(
                  "typeof require !== 'undefined' ? require : function (module) { throw new Error('Module \" + module + \" not found.') }",
                );
                module.exports = requireFoolWebpack;
              },
              744: function (__unused_webpack_module, exports) {
                function _typeof(e) {
                  return (
                    (_typeof =
                      'function' == typeof Symbol &&
                      'symbol' == typeof Symbol.iterator
                        ? function (e) {
                            return typeof e;
                          }
                        : function (e) {
                            return e &&
                              'function' == typeof Symbol &&
                              e.constructor === Symbol &&
                              e !== Symbol.prototype
                              ? 'symbol'
                              : typeof e;
                          }),
                    _typeof(e)
                  );
                }
                var requireFoolWebpack = eval(
                    "typeof require !== 'undefined' ? require : function (module) { throw new Error('Module \" + module + \" not found.') }",
                  ),
                  TERMINATE_METHOD_ID = '__workerpool-terminate__',
                  worker = { exit: function () {} };
                if (
                  'undefined' != typeof self &&
                  'function' == typeof postMessage &&
                  'function' == typeof addEventListener
                )
                  (worker.on = function (e, t) {
                    addEventListener(e, function (e) {
                      t(e.data);
                    });
                  }),
                    (worker.send = function (e) {
                      postMessage(e);
                    });
                else {
                  if ('undefined' == typeof process)
                    throw new Error('Script must be executed as a worker');
                  var WorkerThreads;
                  try {
                    WorkerThreads = requireFoolWebpack('worker_threads');
                  } catch (e) {
                    if (
                      'object' !== _typeof(e) ||
                      null === e ||
                      'MODULE_NOT_FOUND' !== e.code
                    )
                      throw e;
                  }
                  if (WorkerThreads && null !== WorkerThreads.parentPort) {
                    var parentPort = WorkerThreads.parentPort;
                    (worker.send = parentPort.postMessage.bind(parentPort)),
                      (worker.on = parentPort.on.bind(parentPort));
                  } else
                    (worker.on = process.on.bind(process)),
                      (worker.send = process.send.bind(process)),
                      worker.on('disconnect', function () {
                        process.exit(1);
                      }),
                      (worker.exit = process.exit.bind(process));
                }
                function convertError(e) {
                  return Object.getOwnPropertyNames(e).reduce(function (t, r) {
                    return Object.defineProperty(t, r, {
                      value: e[r],
                      enumerable: !0,
                    });
                  }, {});
                }
                function isPromise(e) {
                  return (
                    e &&
                    'function' == typeof e.then &&
                    'function' == typeof e.catch
                  );
                }
                (worker.methods = {}),
                  (worker.methods.run = function (e, t) {
                    var r = new Function(
                      'return (' + e + ').apply(null, arguments);',
                    );
                    return r.apply(r, t);
                  }),
                  (worker.methods.methods = function () {
                    return Object.keys(worker.methods);
                  });
                var currentRequestId = null;
                worker.on('message', function (e) {
                  if (e === TERMINATE_METHOD_ID) return worker.exit(0);
                  try {
                    var t = worker.methods[e.method];
                    if (!t)
                      throw new Error('Unknown method "' + e.method + '"');
                    currentRequestId = e.id;
                    var r = t.apply(t, e.params);
                    isPromise(r)
                      ? r
                          .then(function (t) {
                            worker.send({ id: e.id, result: t, error: null }),
                              (currentRequestId = null);
                          })
                          .catch(function (t) {
                            worker.send({
                              id: e.id,
                              result: null,
                              error: convertError(t),
                            }),
                              (currentRequestId = null);
                          })
                      : (worker.send({ id: e.id, result: r, error: null }),
                        (currentRequestId = null));
                  } catch (t) {
                    worker.send({
                      id: e.id,
                      result: null,
                      error: convertError(t),
                    });
                  }
                }),
                  (worker.register = function (e) {
                    if (e)
                      for (var t in e)
                        e.hasOwnProperty(t) && (worker.methods[t] = e[t]);
                    worker.send('ready');
                  }),
                  (worker.emit = function (e) {
                    currentRequestId &&
                      worker.send({
                        id: currentRequestId,
                        isEvent: !0,
                        payload: e,
                      });
                  }),
                  (exports.add = worker.register),
                  (exports.emit = worker.emit);
              },
            },
            __webpack_module_cache__ = {};
          function __webpack_require__(e) {
            var t = __webpack_module_cache__[e];
            if (void 0 !== t) return t.exports;
            var r = (__webpack_module_cache__[e] = { exports: {} });
            return (
              __webpack_modules__[e](r, r.exports, __webpack_require__),
              r.exports
            );
          }
          var __webpack_exports__ = {};
          return (
            (function () {
              var e = __webpack_exports__,
                t = __webpack_require__(828);
              (e.pool = function (e, t) {
                return new (__webpack_require__(345))(e, t);
              }),
                (e.worker = function (e) {
                  var t = __webpack_require__(744);
                  t.add(e);
                }),
                (e.workerEmit = function (e) {
                  __webpack_require__(744).emit(e);
                }),
                (e.Promise = __webpack_require__(219)),
                (e.platform = t.platform),
                (e.isMainThread = t.isMainThread),
                (e.cpus = t.cpus);
            })(),
            __webpack_exports__
          );
        })();
      }),
      (module.exports = factory());
  });
  let wasm$1;
  const heap$1 = new Array(32).fill(void 0);
  function getObject$1(e) {
    return heap$1[e];
  }
  function isLikeNone$1(e) {
    return null == e;
  }
  heap$1.push(void 0, null, !0, !1);
  let cachegetFloat64Memory0$1 = null;
  function getFloat64Memory0$1() {
    return (
      (null !== cachegetFloat64Memory0$1 &&
        cachegetFloat64Memory0$1.buffer === wasm$1.memory.buffer) ||
        (cachegetFloat64Memory0$1 = new Float64Array(wasm$1.memory.buffer)),
      cachegetFloat64Memory0$1
    );
  }
  let cachegetInt32Memory0$1 = null;
  function getInt32Memory0$1() {
    return (
      (null !== cachegetInt32Memory0$1 &&
        cachegetInt32Memory0$1.buffer === wasm$1.memory.buffer) ||
        (cachegetInt32Memory0$1 = new Int32Array(wasm$1.memory.buffer)),
      cachegetInt32Memory0$1
    );
  }
  let WASM_VECTOR_LEN$1 = 0,
    cachegetUint8Memory0$1 = null;
  function getUint8Memory0$1() {
    return (
      (null !== cachegetUint8Memory0$1 &&
        cachegetUint8Memory0$1.buffer === wasm$1.memory.buffer) ||
        (cachegetUint8Memory0$1 = new Uint8Array(wasm$1.memory.buffer)),
      cachegetUint8Memory0$1
    );
  }
  let cachedTextEncoder$1 = new TextEncoder('utf-8');
  const encodeString$1 =
    'function' == typeof cachedTextEncoder$1.encodeInto
      ? function (e, t) {
          return cachedTextEncoder$1.encodeInto(e, t);
        }
      : function (e, t) {
          const r = cachedTextEncoder$1.encode(e);
          return t.set(r), { read: e.length, written: r.length };
        };
  function passStringToWasm0$1(e, t, r) {
    if (void 0 === r) {
      const r = cachedTextEncoder$1.encode(e),
        n = t(r.length);
      return (
        getUint8Memory0$1()
          .subarray(n, n + r.length)
          .set(r),
        (WASM_VECTOR_LEN$1 = r.length),
        n
      );
    }
    let n = e.length,
      o = t(n);
    const i = getUint8Memory0$1();
    let c = 0;
    for (; c < n; c++) {
      const t = e.charCodeAt(c);
      if (t > 127) break;
      i[o + c] = t;
    }
    if (c !== n) {
      0 !== c && (e = e.slice(c)), (o = r(o, n, (n = c + 3 * e.length)));
      const t = getUint8Memory0$1().subarray(o + c, o + n);
      c += encodeString$1(e, t).written;
    }
    return (WASM_VECTOR_LEN$1 = c), o;
  }
  let heap_next$1 = heap$1.length;
  function dropObject$1(e) {
    e < 36 || ((heap$1[e] = heap_next$1), (heap_next$1 = e));
  }
  function takeObject$1(e) {
    const t = getObject$1(e);
    return dropObject$1(e), t;
  }
  let cachedTextDecoder$1 = new TextDecoder('utf-8', {
      ignoreBOM: !0,
      fatal: !0,
    }),
    wasm;
  function getStringFromWasm0$1(e, t) {
    return cachedTextDecoder$1.decode(getUint8Memory0$1().subarray(e, e + t));
  }
  function addHeapObject$1(e) {
    heap_next$1 === heap$1.length && heap$1.push(heap$1.length + 1);
    const t = heap_next$1;
    return (heap_next$1 = heap$1[t]), (heap$1[t] = e), t;
  }
  function debugString$1(e) {
    const t = typeof e;
    if ('number' == t || 'boolean' == t || null == e) return `${e}`;
    if ('string' == t) return `"${e}"`;
    if ('symbol' == t) {
      const t = e.description;
      return null == t ? 'Symbol' : `Symbol(${t})`;
    }
    if ('function' == t) {
      const t = e.name;
      return 'string' == typeof t && t.length > 0
        ? `Function(${t})`
        : 'Function';
    }
    if (Array.isArray(e)) {
      const t = e.length;
      let r = '[';
      t > 0 && (r += debugString$1(e[0]));
      for (let n = 1; n < t; n++) r += ', ' + debugString$1(e[n]);
      return (r += ']'), r;
    }
    const r = /\[object ([^\]]+)\]/.exec(toString.call(e));
    let n;
    if (!(r.length > 1)) return toString.call(e);
    if (((n = r[1]), 'Object' == n))
      try {
        return 'Object(' + JSON.stringify(e) + ')';
      } catch (e) {
        return 'Object';
      }
    return e instanceof Error ? `${e.name}: ${e.message}\n${e.stack}` : n;
  }
  function scan_array_buffer(e) {
    return wasm$1.scan_array_buffer(addHeapObject$1(e)) >>> 0;
  }
  async function load$1(e, t) {
    if ('function' == typeof Response && e instanceof Response) {
      if ('function' == typeof WebAssembly.instantiateStreaming)
        try {
          return await WebAssembly.instantiateStreaming(e, t);
        } catch (t) {
          if ('application/wasm' == e.headers.get('Content-Type')) throw t;
          console.warn(
            '`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n',
            t,
          );
        }
      const r = await e.arrayBuffer();
      return await WebAssembly.instantiate(r, t);
    }
    {
      const r = await WebAssembly.instantiate(e, t);
      return r instanceof WebAssembly.Instance ? { instance: r, module: e } : r;
    }
  }
  async function init$1(e) {
    void 0 === e &&
      (e = new URL(
        'detector_bg.wasm',
        'undefined' == typeof document && 'undefined' == typeof location
          ? new (require('url').URL)('file:' + __filename).href
          : 'undefined' == typeof document
          ? location.href
          : (document.currentScript && document.currentScript.src) ||
            new URL('c2pa.worker.min.js', document.baseURI).href,
      ));
    const t = { wbg: {} };
    (t.wbg.__wbindgen_is_null = function (e) {
      return null === getObject$1(e);
    }),
      (t.wbg.__wbindgen_is_undefined = function (e) {
        return void 0 === getObject$1(e);
      }),
      (t.wbg.__wbindgen_boolean_get = function (e) {
        const t = getObject$1(e);
        return 'boolean' == typeof t ? (t ? 1 : 0) : 2;
      }),
      (t.wbg.__wbindgen_number_get = function (e, t) {
        const r = getObject$1(t);
        var n = 'number' == typeof r ? r : void 0;
        (getFloat64Memory0$1()[e / 8 + 1] = isLikeNone$1(n) ? 0 : n),
          (getInt32Memory0$1()[e / 4 + 0] = !isLikeNone$1(n));
      }),
      (t.wbg.__wbindgen_string_get = function (e, t) {
        const r = getObject$1(t);
        var n = 'string' == typeof r ? r : void 0,
          o = isLikeNone$1(n)
            ? 0
            : passStringToWasm0$1(
                n,
                wasm$1.__wbindgen_malloc,
                wasm$1.__wbindgen_realloc,
              ),
          i = WASM_VECTOR_LEN$1;
        (getInt32Memory0$1()[e / 4 + 1] = i),
          (getInt32Memory0$1()[e / 4 + 0] = o);
      }),
      (t.wbg.__wbg_new_1192d65414040ad9 = function (e, t) {
        return addHeapObject$1(new Error(getStringFromWasm0$1(e, t)));
      }),
      (t.wbg.__wbindgen_object_drop_ref = function (e) {
        takeObject$1(e);
      }),
      (t.wbg.__wbindgen_string_new = function (e, t) {
        return addHeapObject$1(getStringFromWasm0$1(e, t));
      }),
      (t.wbg.__wbg_new_59cb74e423758ede = function () {
        return addHeapObject$1(new Error());
      }),
      (t.wbg.__wbg_stack_558ba5917b466edd = function (e, t) {
        var r = passStringToWasm0$1(
            getObject$1(t).stack,
            wasm$1.__wbindgen_malloc,
            wasm$1.__wbindgen_realloc,
          ),
          n = WASM_VECTOR_LEN$1;
        (getInt32Memory0$1()[e / 4 + 1] = n),
          (getInt32Memory0$1()[e / 4 + 0] = r);
      }),
      (t.wbg.__wbg_error_4bb6c2a97407129a = function (e, t) {
        try {
          console.error(getStringFromWasm0$1(e, t));
        } finally {
          wasm$1.__wbindgen_free(e, t);
        }
      }),
      (t.wbg.__wbg_byteLength_9828cd72f704b139 = function (e) {
        return getObject$1(e).byteLength;
      }),
      (t.wbg.__wbg_instanceof_Uint8Array_b718c5caf9bb354d = function (e) {
        return getObject$1(e) instanceof Uint8Array;
      }),
      (t.wbg.__wbg_instanceof_ArrayBuffer_86f01c089ac2692f = function (e) {
        return getObject$1(e) instanceof ArrayBuffer;
      }),
      (t.wbg.__wbg_new_9b295d24cf1d706f = function (e) {
        return addHeapObject$1(new Uint8Array(getObject$1(e)));
      }),
      (t.wbg.__wbg_length_2b13641a9d906653 = function (e) {
        return getObject$1(e).length;
      }),
      (t.wbg.__wbindgen_memory = function () {
        return addHeapObject$1(wasm$1.memory);
      }),
      (t.wbg.__wbg_buffer_49131c283a06686f = function (e) {
        return addHeapObject$1(getObject$1(e).buffer);
      }),
      (t.wbg.__wbg_set_3bb960a9975f3cd2 = function (e, t, r) {
        getObject$1(e).set(getObject$1(t), r >>> 0);
      }),
      (t.wbg.__wbindgen_debug_string = function (e, t) {
        var r = passStringToWasm0$1(
            debugString$1(getObject$1(t)),
            wasm$1.__wbindgen_malloc,
            wasm$1.__wbindgen_realloc,
          ),
          n = WASM_VECTOR_LEN$1;
        (getInt32Memory0$1()[e / 4 + 1] = n),
          (getInt32Memory0$1()[e / 4 + 0] = r);
      }),
      (t.wbg.__wbindgen_throw = function (e, t) {
        throw new Error(getStringFromWasm0$1(e, t));
      }),
      (t.wbg.__wbindgen_rethrow = function (e) {
        throw takeObject$1(e);
      }),
      ('string' == typeof e ||
        ('function' == typeof Request && e instanceof Request) ||
        ('function' == typeof URL && e instanceof URL)) &&
        (e = fetch(e));
    const { instance: r, module: n } = await load$1(await e, t);
    return (
      (wasm$1 = r.exports),
      (init$1.__wbindgen_wasm_module = n),
      wasm$1.__wbindgen_start(),
      wasm$1
    );
  }
  cachedTextDecoder$1.decode();
  const heap = new Array(32).fill(void 0);
  function getObject(e) {
    return heap[e];
  }
  heap.push(void 0, null, !0, !1);
  let heap_next = heap.length;
  function dropObject(e) {
    e < 36 || ((heap[e] = heap_next), (heap_next = e));
  }
  function takeObject(e) {
    const t = getObject(e);
    return dropObject(e), t;
  }
  let cachedTextDecoder = new TextDecoder('utf-8', {
    ignoreBOM: !0,
    fatal: !0,
  });
  cachedTextDecoder.decode();
  let cachegetUint8Memory0 = null;
  function getUint8Memory0() {
    return (
      (null !== cachegetUint8Memory0 &&
        cachegetUint8Memory0.buffer === wasm.memory.buffer) ||
        (cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)),
      cachegetUint8Memory0
    );
  }
  function getStringFromWasm0(e, t) {
    return cachedTextDecoder.decode(getUint8Memory0().subarray(e, e + t));
  }
  function addHeapObject(e) {
    heap_next === heap.length && heap.push(heap.length + 1);
    const t = heap_next;
    return (heap_next = heap[t]), (heap[t] = e), t;
  }
  function isLikeNone(e) {
    return null == e;
  }
  let cachegetFloat64Memory0 = null;
  function getFloat64Memory0() {
    return (
      (null !== cachegetFloat64Memory0 &&
        cachegetFloat64Memory0.buffer === wasm.memory.buffer) ||
        (cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer)),
      cachegetFloat64Memory0
    );
  }
  let cachegetInt32Memory0 = null;
  function getInt32Memory0() {
    return (
      (null !== cachegetInt32Memory0 &&
        cachegetInt32Memory0.buffer === wasm.memory.buffer) ||
        (cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer)),
      cachegetInt32Memory0
    );
  }
  let WASM_VECTOR_LEN = 0,
    cachedTextEncoder = new TextEncoder('utf-8');
  const encodeString =
    'function' == typeof cachedTextEncoder.encodeInto
      ? function (e, t) {
          return cachedTextEncoder.encodeInto(e, t);
        }
      : function (e, t) {
          const r = cachedTextEncoder.encode(e);
          return t.set(r), { read: e.length, written: r.length };
        };
  function passStringToWasm0(e, t, r) {
    if (void 0 === r) {
      const r = cachedTextEncoder.encode(e),
        n = t(r.length);
      return (
        getUint8Memory0()
          .subarray(n, n + r.length)
          .set(r),
        (WASM_VECTOR_LEN = r.length),
        n
      );
    }
    let n = e.length,
      o = t(n);
    const i = getUint8Memory0();
    let c = 0;
    for (; c < n; c++) {
      const t = e.charCodeAt(c);
      if (t > 127) break;
      i[o + c] = t;
    }
    if (c !== n) {
      0 !== c && (e = e.slice(c)), (o = r(o, n, (n = c + 3 * e.length)));
      const t = getUint8Memory0().subarray(o + c, o + n);
      c += encodeString(e, t).written;
    }
    return (WASM_VECTOR_LEN = c), o;
  }
  function debugString(e) {
    const t = typeof e;
    if ('number' == t || 'boolean' == t || null == e) return `${e}`;
    if ('string' == t) return `"${e}"`;
    if ('symbol' == t) {
      const t = e.description;
      return null == t ? 'Symbol' : `Symbol(${t})`;
    }
    if ('function' == t) {
      const t = e.name;
      return 'string' == typeof t && t.length > 0
        ? `Function(${t})`
        : 'Function';
    }
    if (Array.isArray(e)) {
      const t = e.length;
      let r = '[';
      t > 0 && (r += debugString(e[0]));
      for (let n = 1; n < t; n++) r += ', ' + debugString(e[n]);
      return (r += ']'), r;
    }
    const r = /\[object ([^\]]+)\]/.exec(toString.call(e));
    let n;
    if (!(r.length > 1)) return toString.call(e);
    if (((n = r[1]), 'Object' == n))
      try {
        return 'Object(' + JSON.stringify(e) + ')';
      } catch (e) {
        return 'Object';
      }
    return e instanceof Error ? `${e.name}: ${e.message}\n${e.stack}` : n;
  }
  function makeMutClosure(e, t, r, n) {
    const o = { a: e, b: t, cnt: 1, dtor: r },
      i = (...e) => {
        o.cnt++;
        const t = o.a;
        o.a = 0;
        try {
          return n(t, o.b, ...e);
        } finally {
          0 == --o.cnt
            ? wasm.__wbindgen_export_2.get(o.dtor)(t, o.b)
            : (o.a = t);
        }
      };
    return (i.original = o), i;
  }
  function __wbg_adapter_32(e, t, r) {
    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h16159bb5481975f7(
      e,
      t,
      addHeapObject(r),
    );
  }
  function getManifestStoreFromArrayBuffer(e, t) {
    var r = passStringToWasm0(
        t,
        wasm.__wbindgen_malloc,
        wasm.__wbindgen_realloc,
      ),
      n = WASM_VECTOR_LEN;
    return takeObject(
      wasm.getManifestStoreFromArrayBuffer(addHeapObject(e), r, n),
    );
  }
  function handleError(e, t) {
    try {
      return e.apply(this, t);
    } catch (e) {
      wasm.__wbindgen_exn_store(addHeapObject(e));
    }
  }
  function __wbg_adapter_69(e, t, r, n) {
    wasm.wasm_bindgen__convert__closures__invoke2_mut__h0119f2fec0fd5758(
      e,
      t,
      addHeapObject(r),
      addHeapObject(n),
    );
  }
  const u32CvtShim = new Uint32Array(2),
    uint64CvtShim = new BigUint64Array(u32CvtShim.buffer),
    int64CvtShim = new BigInt64Array(u32CvtShim.buffer);
  async function load(e, t) {
    if ('function' == typeof Response && e instanceof Response) {
      if ('function' == typeof WebAssembly.instantiateStreaming)
        try {
          return await WebAssembly.instantiateStreaming(e, t);
        } catch (t) {
          if ('application/wasm' == e.headers.get('Content-Type')) throw t;
          console.warn(
            '`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n',
            t,
          );
        }
      const r = await e.arrayBuffer();
      return await WebAssembly.instantiate(r, t);
    }
    {
      const r = await WebAssembly.instantiate(e, t);
      return r instanceof WebAssembly.Instance ? { instance: r, module: e } : r;
    }
  }
  async function init(e) {
    void 0 === e &&
      (e = new URL(
        'toolkit_bg.wasm',
        'undefined' == typeof document && 'undefined' == typeof location
          ? new (require('url').URL)('file:' + __filename).href
          : 'undefined' == typeof document
          ? location.href
          : (document.currentScript && document.currentScript.src) ||
            new URL('c2pa.worker.min.js', document.baseURI).href,
      ));
    const t = { wbg: {} };
    (t.wbg.__wbindgen_object_drop_ref = function (e) {
      takeObject(e);
    }),
      (t.wbg.__wbindgen_string_new = function (e, t) {
        return addHeapObject(getStringFromWasm0(e, t));
      }),
      (t.wbg.__wbg_debug_39b5cbed6e78c8de = function (e, t) {
        console.debug(getObject(e), getObject(t));
      }),
      (t.wbg.__wbg_verify_742929649ba1d786 = function () {
        return handleError(function (e, t, r, n, o) {
          return addHeapObject(
            getObject(e).verify(
              getObject(t),
              getObject(r),
              getObject(n),
              getObject(o),
            ),
          );
        }, arguments);
      }),
      (t.wbg.__wbindgen_is_falsy = function (e) {
        return !getObject(e);
      }),
      (t.wbg.__wbg_new_d3138911a89329b0 = function () {
        return addHeapObject(new Object());
      }),
      (t.wbg.__wbg_new_b563cacb0bf27b31 = function () {
        return addHeapObject(new Map());
      }),
      (t.wbg.__wbg_set_fbb49ad265f9dee8 = function (e, t, r) {
        getObject(e)[takeObject(t)] = takeObject(r);
      }),
      (t.wbg.__wbg_set_e543156a3c4d08a8 = function (e, t, r) {
        return addHeapObject(getObject(e).set(getObject(t), getObject(r)));
      }),
      (t.wbg.__wbindgen_is_string = function (e) {
        return 'string' == typeof getObject(e);
      }),
      (t.wbg.__wbg_new_16f24b0728c5e67b = function () {
        return addHeapObject(new Array());
      }),
      (t.wbg.__wbg_push_a72df856079e6930 = function (e, t) {
        return getObject(e).push(getObject(t));
      }),
      (t.wbg.__wbindgen_object_clone_ref = function (e) {
        return addHeapObject(getObject(e));
      }),
      (t.wbg.__wbg_Window_9b1268158220b644 = function (e) {
        return addHeapObject(getObject(e).Window);
      }),
      (t.wbg.__wbindgen_is_undefined = function (e) {
        return void 0 === getObject(e);
      }),
      (t.wbg.__wbg_WorkerGlobalScope_9da5970cc0e6a5c9 = function (e) {
        return addHeapObject(getObject(e).WorkerGlobalScope);
      }),
      (t.wbg.__wbg_crypto_9b47b3af18683510 = function () {
        return handleError(function (e) {
          return addHeapObject(getObject(e).crypto);
        }, arguments);
      }),
      (t.wbg.__wbg_crypto_f41881ada8f35bec = function () {
        return handleError(function (e) {
          return addHeapObject(getObject(e).crypto);
        }, arguments);
      }),
      (t.wbg.__wbg_subtle_47272643a2622ba8 = function (e) {
        return addHeapObject(getObject(e).subtle);
      }),
      (t.wbg.__wbindgen_number_new = function (e) {
        return addHeapObject(e);
      }),
      (t.wbg.__wbg_now_e6c39c10a5e8aec7 = function () {
        return Date.now();
      }),
      (t.wbg.__wbg_new_e3b800e570795b3c = function (e) {
        return addHeapObject(new Uint8Array(getObject(e)));
      }),
      (t.wbg.__wbg_String_c4052d6424160ac1 = function (e, t) {
        var r = passStringToWasm0(
            String(getObject(t)),
            wasm.__wbindgen_malloc,
            wasm.__wbindgen_realloc,
          ),
          n = WASM_VECTOR_LEN;
        (getInt32Memory0()[e / 4 + 1] = n), (getInt32Memory0()[e / 4 + 0] = r);
      }),
      (t.wbg.__wbg_new_55259b13834a484c = function (e, t) {
        return addHeapObject(new Error(getStringFromWasm0(e, t)));
      }),
      (t.wbg.__wbg_setname_b9dec29a5b82e0e1 = function (e, t, r) {
        getObject(e).name = getStringFromWasm0(t, r);
      }),
      (t.wbg.__wbg_new_4beacc9c71572250 = function (e, t) {
        try {
          var r = { a: e, b: t },
            n = new Promise((e, t) => {
              const n = r.a;
              r.a = 0;
              try {
                return __wbg_adapter_69(n, r.b, e, t);
              } finally {
                r.a = n;
              }
            });
          return addHeapObject(n);
        } finally {
          r.a = r.b = 0;
        }
      }),
      (t.wbg.__wbg_newwithlength_5f4ce114a24dfe1e = function (e) {
        return addHeapObject(new Uint8Array(e >>> 0));
      }),
      (t.wbg.__wbg_length_30803400a8f15c59 = function (e) {
        return getObject(e).length;
      }),
      (t.wbg.__wbg_set_5b8081e9d002f0df = function (e, t, r) {
        getObject(e).set(getObject(t), r >>> 0);
      }),
      (t.wbg.__wbg_buffer_13a197d837d0ca1c = function (e) {
        return addHeapObject(getObject(e).buffer);
      }),
      (t.wbg.__wbg_algorithm_461afc4105ddfc7c = function () {
        return handleError(function (e) {
          return addHeapObject(getObject(e).algorithm);
        }, arguments);
      }),
      (t.wbg.__wbg_get_8bbb82393651dd9c = function () {
        return handleError(function (e, t) {
          return addHeapObject(Reflect.get(getObject(e), getObject(t)));
        }, arguments);
      }),
      (t.wbg.__wbindgen_number_get = function (e, t) {
        const r = getObject(t);
        var n = 'number' == typeof r ? r : void 0;
        (getFloat64Memory0()[e / 8 + 1] = isLikeNone(n) ? 0 : n),
          (getInt32Memory0()[e / 4 + 0] = !isLikeNone(n));
      }),
      (t.wbg.__wbg_new_59cb74e423758ede = function () {
        return addHeapObject(new Error());
      }),
      (t.wbg.__wbg_stack_558ba5917b466edd = function (e, t) {
        var r = passStringToWasm0(
            getObject(t).stack,
            wasm.__wbindgen_malloc,
            wasm.__wbindgen_realloc,
          ),
          n = WASM_VECTOR_LEN;
        (getInt32Memory0()[e / 4 + 1] = n), (getInt32Memory0()[e / 4 + 0] = r);
      }),
      (t.wbg.__wbg_error_4bb6c2a97407129a = function (e, t) {
        try {
          console.error(getStringFromWasm0(e, t));
        } finally {
          wasm.__wbindgen_free(e, t);
        }
      }),
      (t.wbg.__wbg_self_e23d74ae45fb17d1 = function () {
        return handleError(function () {
          return addHeapObject(self.self);
        }, arguments);
      }),
      (t.wbg.__wbg_window_b4be7f48b24ac56e = function () {
        return handleError(function () {
          return addHeapObject(window.window);
        }, arguments);
      }),
      (t.wbg.__wbg_globalThis_d61b1f48a57191ae = function () {
        return handleError(function () {
          return addHeapObject(globalThis.globalThis);
        }, arguments);
      }),
      (t.wbg.__wbg_global_e7669da72fd7f239 = function () {
        return handleError(function () {
          return addHeapObject(global.global);
        }, arguments);
      }),
      (t.wbg.__wbg_newnoargs_f579424187aa1717 = function (e, t) {
        return addHeapObject(new Function(getStringFromWasm0(e, t)));
      }),
      (t.wbg.__wbg_call_89558c3e96703ca1 = function () {
        return handleError(function (e, t) {
          return addHeapObject(getObject(e).call(getObject(t)));
        }, arguments);
      }),
      (t.wbg.__wbg_call_94697a95cb7e239c = function () {
        return handleError(function (e, t, r) {
          return addHeapObject(getObject(e).call(getObject(t), getObject(r)));
        }, arguments);
      }),
      (t.wbg.__wbindgen_memory = function () {
        return addHeapObject(wasm.memory);
      }),
      (t.wbg.__wbg_buffer_5e74a88a1424a2e0 = function (e) {
        return addHeapObject(getObject(e).buffer);
      }),
      (t.wbg.__wbg_newwithbyteoffsetandlength_278ec7532799393a = function (
        e,
        t,
        r,
      ) {
        return addHeapObject(new Uint8Array(getObject(e), t >>> 0, r >>> 0));
      }),
      (t.wbg.__wbg_set_c42875065132a932 = function () {
        return handleError(function (e, t, r) {
          return Reflect.set(getObject(e), getObject(t), getObject(r));
        }, arguments);
      }),
      (t.wbg.__wbg_BigInt_4f2945f00df26418 = function (e, t) {
        (u32CvtShim[0] = e), (u32CvtShim[1] = t);
        const r = int64CvtShim[0];
        return addHeapObject(BigInt(r));
      }),
      (t.wbg.__wbg_BigInt_1b7cf17b993da2bd = function (e, t) {
        (u32CvtShim[0] = e), (u32CvtShim[1] = t);
        const r = uint64CvtShim[0];
        return addHeapObject(BigInt(r));
      }),
      (t.wbg.__wbg_instanceof_Uint8Array_8a8537f46e056474 = function (e) {
        return getObject(e) instanceof Uint8Array;
      }),
      (t.wbg.__wbg_instanceof_ArrayBuffer_649f53c967aec9b3 = function (e) {
        return getObject(e) instanceof ArrayBuffer;
      }),
      (t.wbg.__wbindgen_is_null = function (e) {
        return null === getObject(e);
      }),
      (t.wbg.__wbindgen_boolean_get = function (e) {
        const t = getObject(e);
        return 'boolean' == typeof t ? (t ? 1 : 0) : 2;
      }),
      (t.wbg.__wbindgen_string_get = function (e, t) {
        const r = getObject(t);
        var n = 'string' == typeof r ? r : void 0,
          o = isLikeNone(n)
            ? 0
            : passStringToWasm0(
                n,
                wasm.__wbindgen_malloc,
                wasm.__wbindgen_realloc,
              ),
          i = WASM_VECTOR_LEN;
        (getInt32Memory0()[e / 4 + 1] = i), (getInt32Memory0()[e / 4 + 0] = o);
      }),
      (t.wbg.__wbindgen_debug_string = function (e, t) {
        var r = passStringToWasm0(
            debugString(getObject(t)),
            wasm.__wbindgen_malloc,
            wasm.__wbindgen_realloc,
          ),
          n = WASM_VECTOR_LEN;
        (getInt32Memory0()[e / 4 + 1] = n), (getInt32Memory0()[e / 4 + 0] = r);
      }),
      (t.wbg.__wbindgen_throw = function (e, t) {
        throw new Error(getStringFromWasm0(e, t));
      }),
      (t.wbg.__wbg_then_a6860c82b90816ca = function (e, t) {
        return addHeapObject(getObject(e).then(getObject(t)));
      }),
      (t.wbg.__wbg_then_58a04e42527f52c6 = function (e, t, r) {
        return addHeapObject(getObject(e).then(getObject(t), getObject(r)));
      }),
      (t.wbg.__wbg_resolve_4f8f547f26b30b27 = function (e) {
        return addHeapObject(Promise.resolve(getObject(e)));
      }),
      (t.wbg.__wbindgen_cb_drop = function (e) {
        const t = takeObject(e).original;
        if (1 == t.cnt--) return (t.a = 0), !0;
        return !1;
      }),
      (t.wbg.__wbg_debug_6df4b1a327dd2e94 = function (e, t, r, n) {
        console.debug(getObject(e), getObject(t), getObject(r), getObject(n));
      }),
      (t.wbg.__wbg_error_644d3bc8c0537e80 = function (e, t, r, n) {
        console.error(getObject(e), getObject(t), getObject(r), getObject(n));
      }),
      (t.wbg.__wbg_info_8bed0988e7416289 = function (e, t, r, n) {
        console.info(getObject(e), getObject(t), getObject(r), getObject(n));
      }),
      (t.wbg.__wbg_log_681299aef22afa27 = function (e, t, r, n) {
        console.log(getObject(e), getObject(t), getObject(r), getObject(n));
      }),
      (t.wbg.__wbg_warn_ca021eeadd0df9cd = function (e, t, r, n) {
        console.warn(getObject(e), getObject(t), getObject(r), getObject(n));
      }),
      (t.wbg.__wbg_importKey_22307d8befcba51c = function () {
        return handleError(function (e, t, r, n, o, i, c) {
          return addHeapObject(
            getObject(e).importKey(
              getStringFromWasm0(t, r),
              getObject(n),
              getObject(o),
              0 !== i,
              getObject(c),
            ),
          );
        }, arguments);
      }),
      (t.wbg.__wbindgen_closure_wrapper3297 = function (e, t, r) {
        return addHeapObject(makeMutClosure(e, t, 124, __wbg_adapter_32));
      }),
      ('string' == typeof e ||
        ('function' == typeof Request && e instanceof Request) ||
        ('function' == typeof URL && e instanceof URL)) &&
        (e = fetch(e));
    const { instance: r, module: n } = await load(await e, t);
    return (
      (wasm = r.exports),
      (init.__wbindgen_wasm_module = n),
      wasm.__wbindgen_start(),
      wasm
    );
  }
  const worker = {
    compileWasm(e) {
      return __awaiter(this, void 0, void 0, function* () {
        return WebAssembly.compile(e);
      });
    },
    getReport(e, t, r) {
      return __awaiter(this, void 0, void 0, function* () {
        return yield init(e), getManifestStoreFromArrayBuffer(t, r);
      });
    },
    scanInput(e, t) {
      return __awaiter(this, void 0, void 0, function* () {
        yield init$1(e);
        try {
          return { found: !0, offset: yield scan_array_buffer(t) };
        } catch (e) {
          return { found: !1 };
        }
      });
    },
  };
  workerpool.worker(worker);
});
